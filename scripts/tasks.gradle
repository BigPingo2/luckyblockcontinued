import java.text.SimpleDateFormat;

def luckyConfigDir = "$projectDir/lucky_config"
def luckyRunConfigDir = "$projectDir/run/config/lucky/version-${project.version}"
def luckyAddonDir = "$projectDir/template_addon"
def luckyRunAddonDir = "$projectDir/run/addons/lucky/lucky_block_custom"
def tmpDir = "$buildDir/libs"
def distDir = "$buildDir/dist/$version"

file("$distDir").mkdirs()

SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss")
dateFormat.setTimeZone(TimeZone.getTimeZone("UTC"))

task luckyWriteMeta() {
    group = 'Lucky Block'
    description = 'Writes information about the current version to meta.yaml'
    doLast {
        String[] mcv = mc_version.toString().split('\\.')
        int luckySubversion = version.toString().split('-')[1] as Integer
        int versionNumber = (mcv[0] as Integer) * 1000000 +
            (mcv[1] as Integer) * 10000 +
            (mcv[2] as Integer) * 100 +
            luckySubversion

        file("$distDir/meta.yaml").text =
            "version: $version\n" +
            "mc_version: $mc_version\n" +
            "version_number: $versionNumber\n" +
            "forge_version: $forge_version\n" +
            "revision: ${grgit.head().abbreviatedId}\n" +
            "datetime: ${dateFormat.format(new Date())}\n"
    }
}

task luckyCopyConfig(type: Copy) {
    group = 'Lucky Block'
    description = 'Copies the Lucky Block configuration files to the run directory.'
    from luckyConfigDir
    into luckyRunConfigDir
}

task luckyCopyTemplateAddon(type: Copy) {
    group = 'Lucky Block'
    description = 'Copies the Lucky Block template add-on to the run directory.'
    from luckyAddonDir
    into luckyRunAddonDir
}

task luckyZipConfig(type: Zip) {
    group = 'Lucky Block'
    description = 'Creates a Lucky Block configuration zip archive.'
    destinationDir = file(tmpDir)
    archiveName = 'default_config.zip'
    from luckyConfigDir
}

task luckyPackage(type: Zip) {
    group = 'Lucky Block'
    description = 'Combines the build archive with meta/configuration files to generate the final jar.'
    destinationDir = file(distDir)
    archiveName = "${jarname_prd}.jar"
    from zipTree("$tmpDir/${jarname_dev}.jar")
    from("$tmpDir/default_config.zip") {
        into ('mod/lucky')
    }
    from("$distDir/meta.yaml") {
        into ('')
    }
}

task luckyClient {
    group = 'Lucky Block'
    description = 'Runs a Minecraft client with the Lucky Block.'
    dependsOn luckyCopyConfig
    dependsOn luckyCopyTemplateAddon
    dependsOn 'runClient'
}
task luckyServer {
    group = 'Lucky Block'
    description = 'Runs a Minecraft server with the Lucky Block.'
    dependsOn luckyCopyConfig
    dependsOn luckyCopyTemplateAddon
    dependsOn 'runServer'
}

task luckyBuild {
    group = 'Lucky Block'
    description = 'Builds the Lucky Block.'
    dependsOn build
    dependsOn luckyWriteMeta
    dependsOn luckyZipConfig
    dependsOn luckyPackage

    luckyZipConfig.shouldRunAfter(build)
    luckyWriteMeta.shouldRunAfter(luckyZipConfig)
    luckyPackage.shouldRunAfter(luckyWriteMeta)
}
